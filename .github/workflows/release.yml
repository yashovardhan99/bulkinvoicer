# Release Workflow
# This workflow is used to create a release by updating the changelog,
# tagging the release, and publishing it to PyPI.
name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag for the release (e.g., v1.0.0)"
        required: true
      pre-release:
        description: "Is this a pre-release?"
        required: false
        default: false
        type: boolean
jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'branch' }}
    permissions:
      contents: write
    steps:
      - name: Log Inputs
        run: |
          echo "Version: ${{ github.event.inputs.version }}"
      
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.ACTIONS_BOT_APP_ID }}
          private-key: ${{ secrets.ACTIONS_BOT_PRIVATE_KEY }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.head_ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Set up Git
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Update Changelog
        run: |
          python .github/scripts/update_changelog.py $TAG
          git add CHANGELOG.md
          git commit -m "Update changelog for release $TAG"
          git push origin $BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.event.inputs.version }}
          BRANCH: ${{ github.ref_name }}

      - name: Create Tag
        run: |
          CHANGES=$(python .github/scripts/get_release_notes.py $TAG)
          git tag -a $TAG -m "$TAG" -m "$CHANGES" --cleanup=whitespace
          git push origin $TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.event.inputs.version }}
        
      - name: Create Regular release
        run: |
          gh release create $TAG --notes-from-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.event.inputs.version }}
        if: ${{ ! github.event.inputs.pre-release }}
      
      - name: Create Pre-release
        run: |
          gh release create $TAG --notes-from-tag --prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.event.inputs.version }}
        if: ${{ github.event.inputs.pre-release }}
